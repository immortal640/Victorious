// This code has been generated by ChatGPT 4-o, which was created by OpenAI
// The generated code has been modified though.

using System;
using System.Net.Sockets;
using System.Text;

using TOOLS;

namespace Victorious.Client
{
    public class TcpClient
    {
        public static System.Net.Sockets.TcpClient Client;
        public static NetworkStream Stream { get; private set; }
        public static Guid Guid { get; set; }

        public static void Start(string serverIp, int port)
        {
            try
            {
                Client = new System.Net.Sockets.TcpClient(serverIp, port);
                Stream = Client.GetStream();
                Console.WriteLine($"Connected to server at {serverIp}:{port}");
            }
            catch (Exception ex)
            {
                Console.WriteLine($"Error: Could not connect to server. {ex.Message}");
            }
        }

        public static void Stop()
        {
            Stream?.Close();
            Client?.Close();
            Console.WriteLine("Disconnected from server.");
        }

        public static void Send(string message)
        {
            try
            {
                if (Stream != null)
                {
                    byte[] data = Encoding.UTF8.GetBytes($"~{message}");
                    Stream.Write(data, 0, data.Length);
                }
            }
            catch (Exception ex)
            {
                MESSAGE.CritErr(ex.Message);
            }
        }

        public static void ListenForServerMessages()
        {
            try
            {
                byte[] buffer = new byte[1024];
                while (true)
                {
                    int bytesRead = Stream.Read(buffer, 0, buffer.Length);
                    if (bytesRead == 0) break;

                    string rawMessage = Encoding.ASCII.GetString(buffer, 0, bytesRead);

                    if (rawMessage.StartsWith('~'))
                    {
                        string clientId = "";
                        string message = "";

                        int senderLenth = 0;

                        for (int i = 1; i < rawMessage.Length; i++)
                        {
                            if (rawMessage[i] == '*')
                            {
                                senderLenth = i + 1;
                                break;
                            }
                            clientId += rawMessage[i];
                        }

                        for (int i = senderLenth; i < rawMessage.Length; i++)
                        {
                            message += rawMessage[i];
                        }

                        MESSAGE.Custom(message, clientId, ConsoleColor.DarkCyan);
                    }
                    else if (rawMessage.StartsWith('*'))
                    {
                        rawMessage = rawMessage.Remove(0, 1);
                        MESSAGE.Custom($"New Connection: {rawMessage}", "Server", ConsoleColor.DarkCyan);
                    }
                }
            }
            catch (Exception ex)
            {
                Console.WriteLine($"Connection closed: {ex.Message}");
            }
        }
    }
}